"""empty message

Revision ID: 288c2ca0cfa3
Revises: 
Create Date: 2020-05-07 13:09:03.196847

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '288c2ca0cfa3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('basket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=9), nullable=False),
    sa.PrimaryKeyConstraint('id', 'username', 'password_hash'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vegetable_name',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', 'name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consumer_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['consumer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vegetables',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vegetable_name_id', sa.Integer(), nullable=False),
    sa.Column('average_weight', sa.Float(), nullable=False),
    sa.Column('harvest_date', sa.DateTime(), nullable=False),
    sa.Column('harvest_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['vegetable_name_id'], ['vegetable_name.id'], ),
    sa.PrimaryKeyConstraint('id', 'harvest_date'),
    sa.UniqueConstraint('id')
    )
    op.create_table('basket_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('vegetable_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('basket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['basket_id'], ['basket.id'], ),
    sa.ForeignKeyConstraint(['vegetable_id'], ['vegetables.id'], ),
    sa.PrimaryKeyConstraint('id', 'vegetable_id', 'basket_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('order_basket',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('basket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['basket_id'], ['basket.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'basket_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_basket')
    op.drop_table('basket_item')
    op.drop_table('vegetables')
    op.drop_table('orders')
    op.drop_table('vegetable_name')
    op.drop_table('users')
    op.drop_table('basket')
    # ### end Alembic commands ###
